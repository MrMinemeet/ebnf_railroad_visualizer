"use strict";import{Token as s,Kind as i}from"./Token.js";import{isQuote as e}from"../ChooChoo.js";const n=`
`;export class Scanner{constructor(t){this.input=t,this.pos=0,this.ch="",this.nextChar(),this.isLiteral=!1,this.line=1,this.column=1}next(){if(this.pos>this.input.length)return new s(i.eof);const t=new s(i.unknown);if(this.isLiteral&&!e(this.ch)){let h="";for(;this.hasNext()&&!e(this.ch);)this.ch===" "?h+="\u2423":h+=this.ch,this.nextChar();return t.kind=i.literal,t.str=h,t}for(;this.pos<=this.input.length&&this.isWhitespace(this.ch);)this.nextChar();if(this.pos>this.input.length)return new s(i.eof);if(e(this.ch))return t.kind=i.quote,this.nextChar(),this.isLiteral=!this.isLiteral,t;switch(this.ch){case"(":t.kind=i.lpar,this.nextChar();break;case")":t.kind=i.rpar,this.nextChar();break;case"[":t.kind=i.lbrack,this.nextChar();break;case"]":t.kind=i.rbrack,this.nextChar();break;case"{":t.kind=i.lbrace,this.nextChar();break;case"}":t.kind=i.rbrace,this.nextChar();break;case".":t.kind=i.period,this.nextChar();break;case"|":t.kind=i.pipe,this.nextChar();break;case"=":t.kind=i.assign,this.nextChar();break;default:if(/[a-zA-Z]/.test(this.ch)){let h="";for(;this.hasNext()&&/[a-zA-Z]/.test(this.ch);)h+=this.ch,this.nextChar();t.kind=i.ident,t.str=h}else throw new Error(`(line ${this.line}, column ${this.column}) - Unknown character '${this.ch}'`);break}return t}nextChar(){this.ch=this.input[this.pos++],this.column++,this.ch===n&&(this.line++,this.column=1,this.ch=this.input[this.pos++])}hasNext(){return this.pos<this.input.length}isWhitespace(t){return!t.replace(/\s/g,"").length}getPosition(){return[this.line,this.column]}}
